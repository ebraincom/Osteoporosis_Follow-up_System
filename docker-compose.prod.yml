version: '3.8'

services:
  # Python后端API
  backend:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    container_name: osteoporosis_backend_prod
    environment:
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-production-key-change-this}
      - DATABASE_URL=sqlite:///./osteoporosis.db
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=["*"]
    ports:
      - "8000:8000"
    volumes:
      - ./backend-python/osteoporosis.db:/app/osteoporosis.db
      - uploads_data:/app/uploads
      - ./backend-python/backups:/app/backups
    networks:
      - osteoporosis_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Vue前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: osteoporosis_frontend_prod
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - osteoporosis_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: osteoporosis_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - osteoporosis_network
    restart: unless-stopped

volumes:
  uploads_data:

networks:
  osteoporosis_network:
    driver: bridge